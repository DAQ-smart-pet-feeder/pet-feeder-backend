openapi: 3.0.0
info:
  title: Smart Pet Feeder API
  description:
    TBA
  version: 3.0.0
servers:
  - url: http://127.0.0.1:8080/pet-feeder-api/v3
paths:
  /roomdata:
    get:
      summary: Returns a list of room data.
      operationId: controller.get_sensor_room_data
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorRoomData'
  /get-behavior-data:
    get:
      summary: Returns a list of behavior data that contains timestamp and status.
      operationId: controller.get_behavior_data
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BehaviorData'
  /get-feeding-history:
    get:
      summary: Returns a list of behavior data that contains timestamp and status.
      operationId: controller.get_feeding_data
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedingData'
  /get-meal-plan-data:
    get:
      summary: Get list of all meal plan data
      operationId: controller.get_meal_plan_data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MealPlanData'
  /post-portion-data:
    post:
      summary: Receive the data on portion of pet food and insert into the feedingData database. 
      operationId: controller.post_portion_data
      requestBody:
        description: Data to be sent in the request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                por:
                  type: integer
      responses:
        '201':
          description: Resource created successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /post-tank-data:
    post:
      summary: Receive the data which are feeding_status and remaining_percentage
      operationId: controller.post_tank_data
      requestBody:
        description: Data to be sent in the request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                remaining_percentage:
                  type: integer
                feeding_status:
                  type: integer
      responses:
        '201':
          description: Resource created successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /post-meal-plan-data:
    post:
      summary: Recieve meal plan data and insert into mealPlan database
      operationId: controller.post_meal_plan_data
      requestBody:
        description: Data to be sent in the request body
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  days:
                    type: array
                    items:
                      type: string
                  schedule_id:
                      type: integer
                  time:
                    type: string
                  por:
                    type: integer
                  enable_status:
                    type: integer
      responses:
        '201':
          description: Resource created successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /get-tank-data:
    get:
      summary: send feeding_status and remaining_percentage
      operationId: controller.get_tank_data
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TankData'
  /data:
    get:
      summary: Receive the data of room, tank, and env data
      operationId: controller.get_room_tank_env_data
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomTankEnvData'
  /visual/room-data:
    get:
      summary: Receive maximum and minimum of temperature and PM of each day from room data and receive average of humidity from room data of each day
      operationId: controller.get_room_data_for_visualization
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    hum_avg:
                      type: number
                    temp_min:
                      type: number
                    temp_max:
                      type: number
                    pm_min:
                      type: number
                    pm_max:
                      type: number
  /visual/food-tank-data:
    get:
      summary: Receive maximum and minimum of temperature and average of humidity of each day
      operationId: controller.get_tank_data_for_visualization
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                 type: object
                 properties:
                    date:
                      type: string
                    hum_avg:
                      type: number
                    temp_min:
                      type: number
                    temp_max:
                      type: number
  /visual/pm25:
    get:
      summary: Receive pm25 and eating time of each day
      operationId: controller.get_pm25_and_eating_time
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    pm25:
                      type: integer
                    eating_time:
                      type: array
                      items:
                        type: integer
  /visual/temp:
    get:
      summary: Receive temperature and eating time of each day
      operationId: controller.get_temp_and_eating_time
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    temp:
                      type: number
                    eating_time:
                      type: array
                      items:
                        type: integer
  /visual/hum:
    get:
      summary: Receive humidity and eating time of each day
      operationId: controller.get_humudity_and_eating_time
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    hum:
                      type: integer
                    eating_time:
                      type: array
                      items:
                        type: integer

components:
  schemas:
    TankData:
      type: object
      properties:
        id:
          type: integer
        remaining_percentage:
          type: integer
        feeding_status:
          type: integer
    SensorRoomData:
      type: object
      properties:
        id:
          type: integer
        ts:
          type: string
        dis:
          type: number
          description: distance between sensor and object 
        por:
          type: integer
          description: food portion
    BehaviorData:
      type: object
      properties:
        id:
          type: integer
        ts:
          type: string
        status:
          type: integer
    FeedingData:
      type: object
      properties:
        id:
          type: integer
        ts:
          type: string
        por:
          type: integer
          description: food portion
    MealPlanData:
      type: object
      properties:
        schedule_id:
          type: integer
        days:
          type: array
          items:
            type: string
          description: List of days
        por:
          type: integer
          description: The 'portion' value
        time:
          type: string
          description: The 'time' value
        enable_status:
          type: integer      
    RoomTankEnvData:
      type: object
      properties:
        room_temp:
          type: number
          description: Temperature inside the room
        room_hum:
          type: number
          description: Humidity inside the room
        room_pm:
          type: integer
          description: PM2.5 inside the room
        tank_temp:
          type: number
          description: Temperature inside tank
        tank_hum:
          type: number
          description: Humidity inside tank
        env_temp:
          type: number
          description: Temperature from environment
        env_hum:
          type: number
          description: Humidity from environment
        env_pm:
          type: integer
          description: PM2.5 from environment
